# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.1

defaults: &defaults
    working_directory: ~/repo
    environment:
      PIPENV_VENV_IN_PROJECT: 1
      PIPENV_IGNORE_VIRTUALENVS: 1
    docker:
      - image: circleci/python:3.9

workflows:
  version: 2
  pyramid_openapi3:
    jobs:
      - test_37:
          filters:
            tags:
              only: /.*/
      - test_38:
          filters:
            tags:
              only: /.*/
      - test_39:
          filters:
            tags:
              only: /.*/
      - release:
          requires:
            - test_37
            - test_38
            - test_39
          filters:
            tags:
              only: /[0-9]+\.[0-9]+\.[0-9]+/
            branches:
              ignore: /.*/

commands:
  install_dependencies:
    description: "Install dependencies"
    parameters:
      python_version:
        type: string
        default: "py39"
    steps:
      - restore_cache:
          keys:
            - v1-dependencies-<< parameters.python_version >>-{{ checksum "Pipfile.lock" }}

      - run:
          name: Install dependencies
          command: |
            sudo pip install pipenv
            pipenv install --dev --deploy
            touch .installed

      - save_cache:
          paths:
            - ./.venv
          key: v1-dependencies-<< parameters.python_version >>-{{ checksum "Pipfile.lock" }}


  run_tests:
    description: "Run tests"
    steps:

      - run:
          name: Run linters and unit tests
          command: |
            make lint all=true
            make types
            make unit

      - run:
          name: Run tests for the singlefile example
          command: |
            cd examples/singlefile
            pipenv run python -m unittest app.py

      - run:
          name: Run tests for the todoapp example
          command: |
            cd examples/todoapp
            pipenv run python -m unittest tests.py

      - run:
          name: Run tests for the splitfile example
          command: |
            cd examples/splitfile
            pipenv run python -m unittest tests.py

      - store_artifacts:
          path: htmlcov

      - store_artifacts:
          path: htmltypecov

jobs:

  test_39:
    <<: *defaults

    steps:
      - checkout

      - install_dependencies:
          python_version: "py39"

      - run_tests


  test_38:
    <<: *defaults
    docker:
      - image: circleci/python:3.8

    steps:
      - checkout

      - install_dependencies:
          python_version: "py38"

      - run_tests


  test_37:
    <<: *defaults
    docker:
      - image: circleci/python:3.7


    steps:
      - checkout

      - run:
          name: Test minimal openapi-core version on Python 3.7
          command: ./inject_minimal_openapi-core.sh

      - install_dependencies:
          python_version: "py37"

      - run_tests

  release:
    <<: *defaults

    steps:
      - checkout

      - install_dependencies:
          python_version: "py39"

      - run:
          name: verify git tag vs. version
          command: |
            pipenv run python setup.py verify

      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = zupo" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc

      - run:
          name: create packages
          command: |
            pipenv run python setup.py sdist
            pipenv run python setup.py bdist_wheel

      - run:
          name: upload to pypi
          command: |
            pipenv run twine upload dist/*
